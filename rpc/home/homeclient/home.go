// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: home.proto

package homeclient

import (
	"context"

	"github.com/lance977/hmms-zero/rpc/home/home"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PingReq  = home.PingReq
	PingResp = home.PingResp

	Home interface {
		Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error)
	}

	defaultHome struct {
		cli zrpc.Client
	}
)

func NewHome(cli zrpc.Client) Home {
	return &defaultHome{
		cli: cli,
	}
}

func (m *defaultHome) Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error) {
	client := home.NewHomeClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
