// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: notification.proto

package server

import (
	"context"

	"github.com/lance977/hmms-zero/rpc/notification/internal/logic"
	"github.com/lance977/hmms-zero/rpc/notification/internal/svc"
	"github.com/lance977/hmms-zero/rpc/notification/notification"
)

type NotificationServer struct {
	svcCtx *svc.ServiceContext
	notification.UnimplementedNotificationServer
}

func NewNotificationServer(svcCtx *svc.ServiceContext) *NotificationServer {
	return &NotificationServer{
		svcCtx: svcCtx,
	}
}

func (s *NotificationServer) Ping(ctx context.Context, in *notification.PingReq) (*notification.PingResp, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

// 发送手机验证码
func (s *NotificationServer) SendCodeByPhone(ctx context.Context, in *notification.SendCodeByPhoneReq) (*notification.SendCodeByPhoneResp, error) {
	l := logic.NewSendCodeByPhoneLogic(ctx, s.svcCtx)
	return l.SendCodeByPhone(in)
}
